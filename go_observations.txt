go run file.go - to execute the code without creating a executable file

go build file.go - to create a executable code
./file - to run the code
The Go standard Library has over 100 packages for common tasks like input and outpu, sorting, and text manipulation.
For instance, the fmt package contains functions for printing formatted output functions in fmt; it prints one or more values, separated by spaces, with a newline character ath the ned so that the values appear as a single line of output.

Package main is special. It defines a standalone executable program, not a library. Within Package the function main is also special-its where execution of the program begins. Whatever main does it what the program does. Of course, main will normally call upon functions in other packages to do much of the work, such as the function fmt.Println

You must import exaclty the package you need. A program will not compile if there are missing imports or if there are unnecessary ones. This strict requirement prevents references to unused packages from accumulating as programs evolve.

The import declarations must follow the package declaration. After that, a program consists of the declarations of functions, variables, constants, and types (introduced by the keywords func, var, const and type).

Go takes a strong stance on code formatting. The gofmt tool rewrites code into the standard format, and the go toolÂ´s fmt, subcommand applies gotfmt to all the files in the specified package, or the ones in the current directory by default.

gofmt es un subcomando que ayuda a formatear un archivo de Go, para arreglarlo y que tenga una buena sintaxis de codigo para que la evolucion del desarrollo de software sea coherente.
para usarlo: gofmt -w nombre_del_archivo.go
Si deseas usarlo en todo un directorio, usa el siguiente comando: gofmt -w directorio/

Tambien puedes utilizar gofmt junto con otros comandos para formatear y mostrar el resultado en la salida estandar sin guardar los cambios. Por ejemplo: gofmt nombre_del_archivo.go

Todo eso es para mantener una buena practica y un estilo consistente en los proyectos

Many text editors can be configured to run gofmt each time you save a file, si that your source code is always properly formatted. A related tool, goimports, addtionally manages the insertion and removal of import declarations as needed. It is not part of the standard distribution but you can obtain it with the this command: go get golang.org/x/tolls/cmd/goimports

Command-line arguments are available to a program in a variable named Args that is part of the OS package, thus its name anywhere outside the os package is or.Args.

The first element of the or.Args[0], is the name of the command itself; the other elements are the arguments that were presented to the program when it started execution.


